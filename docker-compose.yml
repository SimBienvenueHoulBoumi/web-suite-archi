networks:
  app-network:
    name: wa-network
    driver: bridge

volumes:
  pg_data:

services:
  database:
    image: postgres:latest
    container_name: ${CONTAINER_DB}
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST_AUTH_METHOD: trust
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      timeout: 3s

  api:
    build:
      context: ./web-suite-api
      dockerfile: Dockerfile.dev  # Correction : éviter les variables non définies ici
    container_name: ${CONTAINER_API}
    restart: always
    depends_on:
      database:
        condition: service_healthy
    environment:
      NODE_ENV: ${ENVIRONMENT}
      PORT: ${API_PORT}
      DATABASE_URL: ${DATABASE_URL}
    env_file:
      - .env
    ports:
      - "${API_PORT}:${API_PORT}"
    volumes:
      - ./web-suite-api:/app
      - /app/node_modules
    networks:
      - app-network
  web:
    build:
      context: ./web-suite-webapp
      dockerfile: Dockerfile.dev
    container_name: ${CONTAINER_WEB_APP}
    restart: always
    depends_on:
      - api
    environment:
      API_HOST: http://api:${API_PORT}
    env_file:
      - .env
    ports:
      - "${WEB_APP_PORT}:3000"
    volumes:
      - ./web-suite-webapp:/app
      - /app/node_modules
    networks:
      - app-network
