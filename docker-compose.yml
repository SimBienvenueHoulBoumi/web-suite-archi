networks:
  app-network:
    name: ${NETWORK_NAME}

volumes:
  pg_data:

services:
  database:
    image: postgres:latest
    container_name: ${CONTAINER_DB}
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      retries: 5
      timeout: 3s

  api:
    build:
      context: ./web-suite-api
      dockerfile: ${DOCKERFILE}
    container_name: ${CONTAINER_API}
    restart: always
    depends_on:
      database:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DATABASE_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      NODE_ENV: ${ENVIRONMENT}
      PORT: ${API_PORT}
    ports:
      - "${API_PORT}:${API_PORT}"
    volumes:
      - ./web-suite-api:/app
      - /app/node_modules
    networks:
      - app-network
    command: ["/bin/sh", "-c", "npx prisma migrate deploy && npm run start"]
